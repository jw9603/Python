# 백준 10709. 기상캐스터
# https://www.acmicpc.net/problem/10709 
################################# 문제 이해 #################################
# 세로 H, 가로 W 킬로미터인 직사각형 모양.
# 각 구역의 하늘에는 구름이 있을수도, 없을수도 있다.
# 모든 구름은 1분이 지날 때마다 1km씩 동쪽으로 이동한다.
# 외부에서 구름이 직사각형으로 오는 경우는 없다.
# 각 구역의 하늘에 구름이 있는지 없는지를 알고 있다.
# 각 구역에 대해서 지금부터 몇 분 뒤 처음으로 하늘에 구름이 오는지를 예측하는 일을 맡았다.

# 각 구역에 대해서 지금부터 몇 분 뒤 처음으로 하늘에 구름이 오는지를 구하여라.

# 입력
# 첫번째 행은 H, W가 공백을 사이에 두고 주어진다.
# 구름이 있는 경우에는 'c'가, 구름이 없는 경우에는 문자 '.'가 주어진다.

# 출력
# 1 ≦ i ≦ H, 1 ≦ j ≦ W
# 출력의 i 번째 행 j 번째 정수는 지금부터 몇 분후에 처음으로 구역 (i, j)에 뜨는지를 표시
# 단, 처음부터 구역 (i, j)에 구름이 떠있었던 경우에는 0을, 몇 분이 지나도 구름이 뜨지 않을 경우에는 -1

# 알고리즘
# 일단, 처음부터 'c'가 있는곳은 0
# 'c'의 왼쪽 부분은 무조건 -1,
# 가로줄에 'c'가 아예 없으면 전부 -1
################################# 문제 이해 #################################
def sol(H, W, grid):
    
    for row in grid:
        result = [-1] * W
        for w in range(W):
            if row[w] == 'c':
                result[w] = 0
        for i in range(1, W):
            if result[i] == -1 and result[i - 1] != -1:
                result[i] = result[i - 1] + 1
        print(*result)

def main():
    H, W = map(int, input().split())
    grid = [input().strip() for _ in range(H)]

    sol(H, W, grid)

if __name__ == '__main__':
    main()