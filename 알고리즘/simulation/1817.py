# 백준 1817. 짐 챙기는 숌
# https://www.acmicpc.net/problem/1817
################################ 문제 이해 ################################
# 겨울캠프에서 집으로 가려고 한다. 근데 숌은 공부를 많이하러 캠프에 온 것이기 때문에 책을 엄청나게
# 많이 가지고 왔다. 숌은 책을 방에 탑처럼 쌓아놨다.
# 숌은 책을 박스에 차곡차곡 넣어서 택배로 미리 보내려고 한다.
# 책은 탑처럼 쌓여있기 때문에, 차대로 박스에 넣을 수 밖에 없다.
# 각각의 책은 무게가 있다. 그리고 박스는 최대 넣을수 있는 무게가 있다.
# 숌이 필요한 박스의 개수의 최솟값?

# 입력: 
# 첫째 줄에 책의 개수 N개와 박스에 넣을 수 있는 최대 무게 M이 주어진다.
# 둘째 줄에 책의 무게가 공백을 사이에 두고 주어진다.

# 출력: 첫째 줄에 필요한 박스의 개수의 최솟값

# 알고리즘
# 해당 문제는 책의 무게가 주어지고, 책의 순서를 변경할 수 없다.
# 따라서, 정렬 X, 그러면 그대로 진행
################################ 문제 이해 ################################
def sol(M, books):
    cnt = 1
    weight = 0

    for book in books:
        if weight + book <= M:
            weight += book
        else:
            weight = book
            cnt += 1
    
    return cnt

def main():
    N, M = map(int, input().split())
    if N == 0:
        return 0
    else:
        books = list(map(int, input().split()))

    return sol(M, books)

if __name__ == '__main__':
    print(main())