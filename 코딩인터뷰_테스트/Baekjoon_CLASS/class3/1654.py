# 백준 1654. 랜선 자르기
# https://www.acmicpc.net/problem/1654
################################## 문제 이해 ##################################
# 박성원이 캠프 때 쓸 N개의 랜선을 만들어야 하는데 너무 바빠서 영식이에게 도움을 청했다.
# 영식이는 자체적으로 K개의 랜선을 가지고 있다. K개의 랜선은 길이가 제각각이다. 
# 박성원은 랜선을 모두 N개의 같은 길이의 랜선으로 만들고 싶었기 때문에 K개의 랜선을 잘라서 만들어야 한다.
# 예를 들어 300cm 짜리 랜선에서 140cm 짜리 랜선을 두 개 잘라내면 20cm는 버려야 한다.
# 편의를 위해 랜선을 자르거나 만들 때 손실되는 길이는 없다고 가정하며, 기존의 K개의 랜선으로 N개의 랜선을 만들 수는 
# 없다고 가정, 자를 때는 항상 센티미터 단위로 정수길이만큼 자른다고 가정하자.
# N개보다 많이 많드는 것도 N개를 만드는 것에 포함된다. 이 때 만들 수 있는 최대 랜선의 길이

# 입력:
# 첫째 줄에는 오영식이 이미 가지고 있는 랜선의 개수 K, 그리고 필요한 랜선의 개수 N, 항상 K <= N
# 그 후 K줄에 걸쳐 이미 가지고 있는 각 랜선의 길이가 센티미터 단위의 정수로 입력된다.

# 출력: 첫째 줄에 N개를 만들 수 있는 랜선의 최대 길이를 센티미터 단위의 정수로 출력한다.

# 알고리즘:
# K개의 랜선을 적절한 길이로 잘라서 생성된 랜선의 개수가 N개 이상을 만들어야하는 문제이다.
# 매개변수 탐색이네? -> 이진 탐색을 사용하자.
################################## 문제 이해 ##################################
def sol(lans, N):
    left, right = 1, max(lans)
    result = 0

    while left <= right:
        mid = (left + right) // 2
        cnt = sum(lan // mid for lan in lans)

        if cnt >= N:
            result = mid
            left = mid + 1
        else:
            right = mid - 1
    
    return result

def main():
    K, N = map(int, input().split())
    lans = [int(input().strip()) for _ in range(K)]

    print(sol(lans, N))

if __name__ == '__main__':
    main()